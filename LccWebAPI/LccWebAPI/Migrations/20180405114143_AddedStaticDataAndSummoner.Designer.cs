// <auto-generated />
using LccWebAPI.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LccWebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180405114143_AddedStaticDataAndSummoner")]
    partial class AddedStaticDataAndSummoner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("GameId");

                    b.Property<DateTime>("MatchDate");

                    b.Property<TimeSpan>("MatchDuration");

                    b.Property<string>("MatchPatch");

                    b.Property<int>("WinningTeamId");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.MatchPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Assists");

                    b.Property<int>("ChampionId");

                    b.Property<int>("Deaths");

                    b.Property<int>("Kills");

                    b.Property<long>("MatchTeamId");

                    b.Property<int?>("MatchTeamId1");

                    b.Property<int>("ParticipantId");

                    b.Property<long>("PlayerId");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamId1");

                    b.ToTable("MatchPlayer");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.MatchTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaronKills");

                    b.Property<int>("DragonKills");

                    b.Property<int>("InhibitorKills");

                    b.Property<int>("MatchId");

                    b.Property<int>("RiftHeraldKills");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("MatchTeam");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ItemId");

                    b.Property<int>("ItemSlot");

                    b.Property<int>("MatchPlayerId");

                    b.HasKey("Id");

                    b.HasIndex("MatchPlayerId");

                    b.ToTable("PlayerItem");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerRune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MatchPlayerId");

                    b.Property<long>("RuneId");

                    b.Property<int>("RuneSlot");

                    b.HasKey("Id");

                    b.HasIndex("MatchPlayerId");

                    b.ToTable("PlayerRune");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerSummonerSpell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MatchPlayerId");

                    b.Property<long>("SummonerSpellId");

                    b.Property<int>("SummonerSpellSlot");

                    b.HasKey("Id");

                    b.HasIndex("MatchPlayerId");

                    b.ToTable("PlayerSummonerSpell");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbStaticData.Champion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChampionId");

                    b.Property<string>("ChampionName");

                    b.Property<string>("ImageFull");

                    b.HasKey("Id");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbStaticData.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageFull");

                    b.Property<int>("ItemId");

                    b.Property<string>("ItemName");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbStaticData.Rune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageFull");

                    b.Property<int>("RuneId");

                    b.Property<string>("RuneName");

                    b.HasKey("Id");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbStaticData.SummonerSpell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageFull");

                    b.Property<int>("SummonerSpellId");

                    b.Property<string>("SummonerSpellName");

                    b.HasKey("Id");

                    b.ToTable("SummonerSpells");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbSummoner.Summoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AccountId");

                    b.Property<long>("Level");

                    b.Property<int>("ProfileIconId");

                    b.Property<DateTime>("RevisionDate");

                    b.Property<long>("SummonerId");

                    b.Property<string>("SummonerName");

                    b.HasKey("Id");

                    b.ToTable("Summoners");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.MatchPlayer", b =>
                {
                    b.HasOne("LccWebAPI.Models.DbMatch.MatchTeam", "MatchTeam")
                        .WithMany("Players")
                        .HasForeignKey("MatchTeamId1");
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.MatchTeam", b =>
                {
                    b.HasOne("LccWebAPI.Models.DbMatch.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerItem", b =>
                {
                    b.HasOne("LccWebAPI.Models.DbMatch.MatchPlayer", "MatchPlayer")
                        .WithMany("Items")
                        .HasForeignKey("MatchPlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerRune", b =>
                {
                    b.HasOne("LccWebAPI.Models.DbMatch.MatchPlayer", "MatchPlayer")
                        .WithMany("Runes")
                        .HasForeignKey("MatchPlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LccWebAPI.Models.DbMatch.PlayerSummonerSpell", b =>
                {
                    b.HasOne("LccWebAPI.Models.DbMatch.MatchPlayer", "MatchPlayer")
                        .WithMany("SummonerSpells")
                        .HasForeignKey("MatchPlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
